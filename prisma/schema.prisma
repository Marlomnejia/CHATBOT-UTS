generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model conversation_messages {
  id              Int                          @id @default(autoincrement())
  conversation_id Int?
  sender          conversation_messages_sender
  message         String                       @db.Text
  timestamp       DateTime                     @default(now()) @db.Timestamp(0)
  conversations   conversations?               @relation(fields: [conversation_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "conversation_messages_ibfk_1")

  @@index([conversation_id], map: "conversation_id")
}

model conversations {
  id                    Int                     @id @default(autoincrement())
  user_id               Int?
  created_at            DateTime                @default(now()) @db.Timestamp(0)
  conversation_messages conversation_messages[]
  users                 users?                  @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Restrict, map: "conversations_ibfk_1")

  @@index([user_id], map: "user_id")
}


model faqs {
  id         Int      @id @default(autoincrement())
  question   String   @db.Text
  answer     String   @db.Text
  created_by Int?
  created_at DateTime @default(now()) @db.Timestamp(0)
  updated_at DateTime @default(now()) @db.Timestamp(0)
  users      users?   @relation(fields: [created_by], references: [id], onUpdate: Restrict, map: "faqs_ibfk_1")

  @@index([created_by], map: "created_by")
}

model user_preferences {
  id               Int      @id @default(autoincrement())
  user_id          Int
  materia_favorita String   @db.VarChar(255)
  created_at       DateTime @default(now()) @db.Timestamp(0)
}

model users {
  id                Int             @id @default(autoincrement())
  name              String          @db.VarChar(255)
  email             String          @unique(map: "email") @db.VarChar(255)
  password          String          @db.VarChar(255)
  role              users_role      @default(student)
  created_at        DateTime        @default(now()) @db.Timestamp(0)
  isVerified        Boolean?        @default(false)
  verificationToken String?         @db.VarChar(255)
  conversations     conversations[]
  faqs              faqs[]
}

enum conversation_messages_sender {
  user
  bot
}

enum users_role {
  admin
  student
}
